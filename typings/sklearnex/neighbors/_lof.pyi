"""
This type stub file was generated by pyright.
"""

from functools import wraps
from sklearn.neighbors import LocalOutlierFactor as _sklearn_LocalOutlierFactor
from sklearn.utils.metaestimators import available_if
from daal4py.sklearn._n_jobs_support import control_n_jobs
from daal4py.sklearn._utils import sklearn_check_version
from sklearnex._device_offload import wrap_output_data
from sklearnex.neighbors.common import KNeighborsDispatchingBase

@control_n_jobs(decorated_methods=["fit", "kneighbors", "_kneighbors"])
class LocalOutlierFactor(KNeighborsDispatchingBase, _sklearn_LocalOutlierFactor):
    __doc__ = ...
    if sklearn_check_version("1.2"):
        _parameter_constraints: dict = ...
    _save_attributes = ...
    _onedal_knn_fit = ...
    _onedal_kneighbors = ...
    def fit(self, X, y=...): # -> Any:
        ...
    
    @available_if(_sklearn_LocalOutlierFactor._check_novelty_fit_predict)
    @wraps(_sklearn_LocalOutlierFactor.fit_predict, assigned=["__doc__"])
    @wrap_output_data
    def fit_predict(self, X, y=...): # -> Any:
        ...
    
    kneighbors = ...
    @available_if(_sklearn_LocalOutlierFactor._check_novelty_score_samples)
    @wraps(_sklearn_LocalOutlierFactor.score_samples, assigned=["__doc__"])
    @wrap_output_data
    def score_samples(self, X): # -> Any:
        ...
    


