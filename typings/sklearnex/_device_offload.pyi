"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable
from typing import Any
from ._config import get_config
from .base import oneDALEstimator

if "array_api_dispatch" in get_config():
    _array_api_offload = ...
else:
    _array_api_offload = ...
def dispatch(obj: type[oneDALEstimator], method_name: str, branches: dict[Callable, Callable], *args, **kwargs) -> Any:
    """Dispatch object method call to oneDAL if conditionally possible.

    Depending on support conditions, oneDAL will be called, otherwise it will
    fall back to calling scikit-learn.  Dispatching to oneDAL can be influenced
    by the 'use_raw_input' or 'allow_fallback_to_host' config parameters.

    Parameters
    ----------
    obj : object
        Sklearnex object which inherits from oneDALEstimator and contains
        ``onedal_cpu_supported`` and ``onedal_gpu_supported`` methods which
        evaluate oneDAL support.

    method_name : str
        Name of method to be evaluated for oneDAL support.

    branches : dict
        Dictionary containing functions to be called. Only keys 'sklearn' and
        'onedal' are used which should contain the relevant scikit-learn and
        onedal object methods respectively. All functions should accept the
        inputs from *args and **kwargs. Additionally, the onedal object method
        must accept a 'queue' keyword.

    *args : tuple
        Arguments to be supplied to the dispatched method.

    **kwargs : dict
        Keyword arguments to be supplied to the dispatched method.

    Returns
    -------
    unknown : object
        Returned object dependent on the supplied branches. Implicitly the returned
        object types should match for the sklearn and onedal object methods.
    """
    ...

def wrap_output_data(func: Callable) -> Callable:
    """Transform function output to match input format.

    Converts and moves the output arrays of the decorated function
    to match the input array type and device.

    Parameters
    ----------
    func : callable
       Function or method which has array data as input.

    Returns
    -------
    wrapper : callable
        Wrapped function or method which will return matching format.
    """
    ...

